name: docker_build_and_push

on:
  push:
    branches:
      - "**"

env:
  REGISTRY_IMAGE: fabbro03/solar-simulator
  VERSION: v0.0.4

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm/v7

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          flavor: |
            latest=auto
          tags: |
            type=semver,pattern={{version}},value=${{ env.VERSION }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true

      - name: Sanitize platform name
        run: |
          SAFE_PLATFORM="${{ matrix.platform }}"
          SAFE_PLATFORM="${SAFE_PLATFORM//\//_}"
          echo "SAFE_PLATFORM=$SAFE_PLATFORM" >> $GITHUB_ENV

      - name: Export digest and upload
        run: |
          mkdir -p /tmp/digests
          echo "${{ steps.build.outputs.digest }}" > "/tmp/digests/${SAFE_PLATFORM}.digest"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.SAFE_PLATFORM }}
          path: /tmp/digests/*.digest
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - build

    steps:
      - name: Download all digest artifacts
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          flavor: |
            latest=true
          tags: |
            type=semver,pattern={{version}},value=${{ env.VERSION }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create manifest list and push
        run: |
          echo "Found digests:"
          find /tmp/digests -name '*.digest'

          digests=""
          for file in $(find /tmp/digests -name '*.digest'); do
            digest=$(cat "$file")
            digests="$digests ${{ env.REGISTRY_IMAGE }}@$digest"
          done

          docker buildx imagetools create \
            $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $digests

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}
